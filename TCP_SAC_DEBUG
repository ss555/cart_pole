17:56:12,792 root INFO reset with nsteps: 0, state:[ 0.0000000e+00  0.0000000e+00 -1.0000000e+00  1.2246469e-16
  0.0000000e+00]
17:56:12,843 root INFO state: [ 0.00573333  0.11466666 -0.99994516  0.01047178 -0.20943952], cost-0.0001744970679283142, done:False
17:56:12,893 root INFO state: [ 0.01946667  0.27466667 -0.99912286  0.04187565 -0.62831855], cost9.847529232501987e-05, done:False
17:56:12,944 root INFO state: [ 0.03506667  0.312      -0.99731445  0.07323819 -0.62831855], cost0.0012828801572322846, done:False
17:56:12,993 root INFO state: [ 0.0482      0.26266667 -0.99556196  0.09410831 -0.41887903], cost0.0025100426375865934, done:False
17:56:13,44 root INFO state: [ 0.058       0.196      -0.9945219   0.10452846 -0.20943952], cost0.0031580841541290284, done:False
17:56:13,94 root INFO state: [ 0.06586666  0.15733333 -0.9945219   0.10452846  0.        ], cost0.0028434175252914427, done:False
17:56:13,144 root INFO state: [ 0.07346667  0.152      -0.9945219   0.10452846  0.        ], cost0.0025394174456596376, done:False
17:56:13,195 root INFO state: [ 0.08073334  0.14533333 -0.99556196  0.09410831  0.20943952], cost0.001208709180355072, done:False
17:56:13,245 root INFO state: [ 0.0878      0.14133333 -0.99731445  0.07323819  0.41887903], cost-0.0008264532685279846, done:False
17:56:13,295 root INFO state: [ 0.09506667  0.14533333 -0.9986295   0.05233596  0.41887903], cost-0.0024321770668029787, done:False
17:56:13,345 root INFO state: [ 0.10313334  0.16133334 -0.99950653  0.03141076  0.41887903], cost-0.0036318665742874146, done:False
17:56:13,396 root INFO state: [ 0.11193334  0.176      -0.99994516  0.01047178  0.41887903], cost-0.004422497153282166, done:False
17:56:13,446 root INFO state: [ 1.2206667e-01  2.0266667e-01 -1.0000000e+00  1.2246469e-16
  2.0943952e-01], cost-0.004882666766643524, done:False
17:56:13,496 root INFO state: [ 0.13393334  0.23733333 -0.99978065 -0.02094242  0.41887903], cost-0.005137988328933716, done:False
17:56:13,547 root INFO state: [ 0.14893334  0.3        -0.99978065 -0.02094242  0.        ], cost-0.005737988352775574, done:False
17:56:13,597 root INFO state: [ 0.16466667  0.31466666 -0.99978065 -0.02094242  0.        ], cost-0.006367321610450744, done:False
17:56:13,648 root INFO state: [ 0.18153334  0.33733332 -0.99978065 -0.02094242  0.        ], cost-0.007041988372802735, done:False
17:56:13,698 root INFO state: [ 0.19873333  0.344      -0.99994516 -0.01047178 -0.20943952], cost-0.007894496917724609, done:False
17:56:13,748 root INFO state: [ 2.1593334e-01  3.4400001e-01 -1.0000000e+00  1.2246469e-16
 -2.0943952e-01], cost-0.008637333512306214, done:False
17:56:13,798 root INFO state: [ 2.3199999e-01  3.2133332e-01 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.009279999732971191, done:False
17:56:13,848 root INFO state: [ 2.4466667e-01  2.5333333e-01 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.009786666631698608, done:False
17:56:13,898 root INFO state: [ 0.25473332  0.20133333 -0.99994516 -0.01047178  0.20943952], cost-0.010134496688842774, done:False
17:56:13,949 root INFO state: [ 0.25866666  0.07866666 -0.99950653 -0.03141076  0.41887903], cost-0.009853199720382691, done:False
17:56:14,0 root INFO state: [ 0.25726667 -0.028      -0.9980267  -0.06279052  0.62831855], cost-0.008317395448684692, done:False
17:56:14,50 root INFO state: [ 0.25786668  0.012      -0.99649286 -0.08367784  0.41887903], cost-0.0068075299263000485, done:False
17:56:14,99 root INFO state: [ 0.26226667  0.088      -0.99649286 -0.08367784  0.        ], cost-0.006983529329299926, done:False
17:56:14,150 root INFO state: [ 0.2656      0.06666667 -0.99556196 -0.09410831  0.20943952], cost-0.006185957193374635, done:False
17:56:14,201 root INFO state: [ 0.26733333  0.03466666 -0.99556196 -0.09410831  0.        ], cost-0.006255290508270263, done:False
17:56:14,251 root INFO state: [ 0.26766667  0.00666667 -0.99556196 -0.09410831  0.        ], cost-0.006268624067306518, done:False
17:56:14,301 root INFO state: [ 0.2684      0.01466667 -0.99556196 -0.09410831  0.        ], cost-0.00629795789718628, done:False
17:56:14,351 root INFO state: [ 0.27113333  0.05466667 -0.99649286 -0.08367784 -0.20943952], cost-0.007338196039199829, done:False
17:56:14,402 root INFO state: [ 0.27073333 -0.008      -0.9980267  -0.06279052 -0.41887903], cost-0.008856061697006225, done:False
17:56:14,452 root INFO state: [ 0.26973334 -0.02       -0.9986295  -0.05233596 -0.20943952], cost-0.009418843984603882, done:False
17:56:14,502 root INFO state: [ 0.27213332  0.048      -0.99950653 -0.03141076 -0.41887903], cost-0.010391865968704223, done:False
17:56:14,553 root INFO state: [ 2.7146667e-01 -1.3333334e-02 -1.0000000e+00  1.2246469e-16
 -6.2831855e-01], cost-0.010858666896820069, done:False
17:56:14,603 root INFO state: [ 0.267      -0.08933333 -0.99978065  0.02094242 -0.41887903], cost-0.010460654497146607, done:False
17:56:14,653 root INFO state: [ 0.26733333  0.00666667 -0.99950653  0.03141076 -0.20943952], cost-0.010199866294860839, done:False
17:56:14,704 root INFO state: [ 0.26733333  0.         -0.9980267   0.06279052 -0.62831855], cost-0.008720061779022216, done:False
17:56:14,754 root INFO state: [ 0.2614     -0.11866666 -0.99912286  0.04187565  0.41887903], cost-0.009578858613967895, done:False
17:56:14,804 root INFO state: [ 0.2594     -0.04       -0.9986295   0.05233596 -0.20943952], cost-0.009005510807037353, done:False
17:56:14,854 root INFO state: [ 0.26066667  0.02533333 -0.9980267   0.06279052 -0.20943952], cost-0.008453395366668701, done:False
17:56:14,904 root INFO state: [ 0.2568     -0.07733333 -0.9980267   0.06279052  0.        ], cost-0.008298728466033935, done:False
17:56:14,955 root INFO state: [ 0.2542     -0.052      -0.9986295   0.05233596  0.20943952], cost-0.008797510862350463, done:False
17:56:15,5 root INFO state: [ 0.25386667 -0.00666667 -0.9986295   0.05233596  0.        ], cost-0.00878417730331421, done:False
17:56:15,55 root INFO state: [ 0.2506     -0.06533334 -0.99912286  0.04187565  0.20943952], cost-0.00914685845375061, done:False
17:56:15,105 root INFO state: [ 0.24873333 -0.03733333 -0.99950653  0.03141076  0.20943952], cost-0.00945586621761322, done:False
17:56:15,156 root INFO state: [ 0.24846667 -0.00533333 -0.99978065  0.02094242  0.20943952], cost-0.009719321727752686, done:False
17:56:15,206 root INFO state: [ 0.24626666 -0.044      -0.99994516  0.01047178  0.20943952], cost-0.009795830249786378, done:False
17:56:15,257 root INFO state: [ 0.2454     -0.01733333 -0.99994516 -0.01047178  0.41887903], cost-0.009761163592338562, done:False
17:56:15,307 root INFO state: [ 0.24586667  0.00933333 -0.99978065 -0.02094242  0.20943952], cost-0.00961532175540924, done:False
17:56:15,357 root INFO state: [ 0.24493334 -0.01866667 -0.99950653 -0.03141076  0.20943952], cost-0.009303866624832154, done:False
17:56:15,408 root INFO state: [ 0.24573334  0.016      -0.99912286 -0.04187565  0.20943952], cost-0.008952191472053528, done:False
17:56:15,458 root INFO state: [ 0.2482      0.04933333 -0.99912286 -0.04187565  0.        ], cost-0.009050858020782471, done:False
17:56:15,508 root INFO state: [ 0.24853334  0.00666667 -0.9986295  -0.05233596  0.20943952], cost-0.008570843935012817, done:False
17:56:15,558 root INFO state: [ 0.24893333  0.008      -0.9986295  -0.05233596  0.        ], cost-0.008586843609809875, done:False
17:56:15,609 root INFO state: [ 0.2518      0.05733333 -0.9986295  -0.05233596  0.        ], cost-0.008701510429382324, done:False
17:56:15,659 root INFO state: [ 0.25306666  0.02533333 -0.99912286 -0.04187565 -0.20943952], cost-0.009245524406433106, done:False
17:56:15,709 root INFO state: [ 0.25346667  0.008      -0.99912286 -0.04187565  0.        ], cost-0.009261524677276612, done:False
17:56:15,759 root INFO state: [ 0.25566667  0.044      -0.99950653 -0.03141076 -0.20943952], cost-0.009733200073242188, done:False
17:56:15,810 root INFO state: [ 0.25646666  0.016      -0.99950653 -0.03141076  0.        ], cost-0.009765199422836303, done:False
17:56:15,859 root INFO state: [ 0.2552     -0.02533333 -0.99950653 -0.03141076  0.        ], cost-0.009714533090591431, done:False
17:56:15,911 root INFO state: [ 0.2568      0.032      -0.99978065 -0.02094242 -0.20943952], cost-0.01005265474319458, done:False
17:56:15,961 root INFO state: [ 0.2584      0.032      -0.99994516 -0.01047178 -0.20943952], cost-0.010281163454055785, done:False
17:56:16,11 root INFO state: [ 0.25626665 -0.04266667 -0.99994516 -0.01047178  0.        ], cost-0.010195829868316651, done:False
17:56:16,61 root INFO state: [ 2.5646666e-01  4.0000002e-03 -1.0000000e+00  1.2246469e-16
 -2.0943952e-01], cost-0.010258666276931762, done:False
17:56:16,110 root INFO state: [ 0.25773335  0.02533333 -0.99994516  0.01047178 -0.20943952], cost-0.010254497528076173, done:False
17:56:16,162 root INFO state: [ 0.25546667 -0.04533333 -0.99994516  0.01047178  0.        ], cost-0.010163830518722534, done:False
17:56:16,212 root INFO state: [ 0.25426668 -0.024      -0.99994516  0.01047178  0.        ], cost-0.010115830898284913, done:False
17:56:16,262 root INFO state: [ 0.255       0.01466667 -0.99994516  0.01047178  0.        ], cost-0.010145163536071778, done:False
17:56:16,312 root INFO state: [ 0.25313333 -0.03733333 -0.99994516  0.01047178  0.        ], cost-0.010070496797561645, done:False
17:56:16,363 root INFO state: [ 2.5206667e-01 -2.1333333e-02 -1.0000000e+00  1.2246469e-16
  2.0943952e-01], cost-0.010082666873931884, done:False
17:56:16,413 root INFO state: [ 2.5246668e-01  8.0000004e-03 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.01009866714477539, done:False
17:56:16,463 root INFO state: [ 2.5086668e-01 -3.2000002e-02 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.010034667253494263, done:False
17:56:16,513 root INFO state: [ 2.5053334e-01 -6.6666668e-03 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.010021333694458007, done:False
17:56:16,564 root INFO state: [ 2.5126666e-01  1.4666666e-02 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.010050666332244874, done:False
17:56:16,614 root INFO state: [ 0.2496     -0.03333334 -0.99994516 -0.01047178  0.20943952], cost-0.009929163455963135, done:False
17:56:16,665 root INFO state: [ 0.24946667 -0.00266667 -0.99994516 -0.01047178  0.        ], cost-0.00992383062839508, done:False
17:56:16,715 root INFO state: [ 0.2514      0.03866667 -0.99994516 -0.01047178  0.        ], cost-0.010001163482666015, done:False
17:56:16,765 root INFO state: [ 0.25126666 -0.00266667 -0.99994516 -0.01047178  0.        ], cost-0.009995830059051514, done:False
17:56:16,815 root INFO state: [ 0.24973333 -0.03066667 -0.99978065 -0.02094242  0.20943952], cost-0.00976998805999756, done:False
17:56:16,865 root INFO state: [ 0.2506      0.01733333 -0.99978065 -0.02094242  0.        ], cost-0.009804655313491822, done:False
17:56:16,916 root INFO state: [ 0.25146666  0.01733333 -0.99978065 -0.02094242  0.        ], cost-0.00983932137489319, done:False
17:56:16,966 root INFO state: [ 0.25006667 -0.028      -0.99978065 -0.02094242  0.        ], cost-0.009783321619033813, done:False
17:56:17,16 root INFO state: [ 0.25106665  0.02       -0.99978065 -0.02094242  0.        ], cost-0.009823321104049683, done:False
17:56:17,67 root INFO state: [ 2.5240001e-01  2.6666667e-02 -1.0000000e+00  1.2246469e-16
 -4.1887903e-01], cost-0.01009600043296814, done:False
17:56:17,116 root INFO state: [ 2.5119999e-01 -2.4000000e-02 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.010047999620437622, done:False
17:56:17,167 root INFO state: [ 2.5146666e-01  5.3333333e-03 -1.0000000e+00  1.2246469e-16
  0.0000000e+00], cost-0.010058666467666627, done:False
17:56:17,217 root INFO state: [ 0.25126666 -0.004      -0.99994516  0.01047178 -0.20943952], cost-0.009995830059051514, done:False
17:56:17,268 root INFO state: [ 0.2494     -0.03733333 -0.99994516  0.01047178  0.        ], cost-0.00992116391658783, done:False
17:56:17,318 root INFO state: [ 0.24953334  0.00266667 -0.99978065  0.02094242 -0.20943952], cost-0.009761988520622253, done:False
17:56:17,367 root INFO state: [ 0.24973333  0.004      -0.99978065  0.02094242  0.        ], cost-0.00976998805999756, done:False
17:56:17,418 root INFO state: [ 0.2468     -0.05866667 -0.99978065  0.02094242  0.        ], cost-0.009652655124664306, done:False
17:56:17,469 root INFO state: [ 0.24626666 -0.01066667 -0.99978065  0.02094242  0.        ], cost-0.0096313214302063, done:False
17:56:17,519 root INFO state: [ 0.2466      0.00666667 -0.99978065  0.02094242  0.        ], cost-0.009644654989242553, done:False
17:56:17,569 root INFO state: [ 0.24413334 -0.04933333 -0.99978065  0.02094242  0.        ], cost-0.00954598844051361, done:False
17:56:17,620 root INFO state: [ 0.2436     -0.01066667 -0.99994516  0.01047178  0.20943952], cost-0.009689163565635681, done:False
17:56:17,670 root INFO state: [ 0.24393333  0.00666667 -0.99978065  0.02094242 -0.20943952], cost-0.009537988305091859, done:False
17:56:17,720 root INFO state: [ 0.2418     -0.04266667 -0.99978065  0.02094242  0.        ], cost-0.009452654719352723, done:False
17:56:17,770 root INFO state: [ 0.24106666 -0.01466667 -0.99950653  0.03141076 -0.20943952], cost-0.009149199724197388, done:False
17:56:17,821 root INFO state: [ 0.2414      0.00666667 -0.99950653  0.03141076  0.        ], cost-0.009162533283233642, done:False
17:56:17,870 root INFO state: [ 0.2396     -0.036      -0.99950653  0.03141076  0.        ], cost-0.009090533256530762, done:False
17:56:17,921 root INFO state: [ 0.239      -0.012      -0.99950653  0.03141076  0.        ], cost-0.009066532850265503, done:False
17:56:17,972 root INFO state: [ 0.2386     -0.008      -0.99950653  0.03141076  0.        ], cost-0.009050533175468445, done:False
17:56:18,22 root INFO state: [ 0.23646666 -0.04266667 -0.99950653  0.03141076  0.        ], cost-0.008965199589729309, done:False
17:56:18,72 root INFO state: [ 0.23593333 -0.01066667 -0.99950653  0.03141076  0.        ], cost-0.008943866491317749, done:False
17:56:18,121 root INFO state: [ 0.23573333 -0.004      -0.99950653  0.03141076  0.        ], cost-0.008935866355895996, done:False
17:56:18,173 root INFO state: [ 0.23386666 -0.03733333 -0.99950653  0.03141076  0.        ], cost-0.008861199617385865, done:False
17:56:18,223 root INFO state: [ 0.2334     -0.00933333 -0.99950653  0.03141076  0.        ], cost-0.008842533230781555, done:False
17:56:18,273 root INFO state: [ 0.2332     -0.004      -0.99950653  0.03141076  0.        ], cost-0.008834533095359802, done:False
17:56:18,324 root INFO state: [ 0.23133333 -0.03733333 -0.99950653  0.03141076  0.        ], cost-0.008759866356849671, done:False
17:56:18,374 root INFO state: [ 0.23086667 -0.00933333 -0.99978065  0.02094242  0.20943952], cost-0.009015321731567383, done:False
17:56:18,424 root INFO state: [ 0.23086667  0.         -0.99978065  0.02094242  0.        ], cost-0.009015321731567383, done:False
17:56:18,474 root INFO state: [ 0.2294     -0.02933333 -0.99978065  0.02094242  0.        ], cost-0.00895665466785431, done:False
17:56:18,525 root INFO state: [ 0.229      -0.008      -0.99978065  0.02094242  0.        ], cost-0.00894065499305725, done:False
17:56:18,575 root INFO state: [ 0.2288     -0.004      -0.99978065  0.02094242  0.        ], cost-0.008932654857635497, done:False
17:56:18,625 root INFO state: [ 0.22726667 -0.03066667 -0.99978065  0.02094242  0.        ], cost-0.00887132167816162, done:False
17:56:18,675 root INFO state: [ 0.22693333 -0.00666667 -0.99978065  0.02094242  0.        ], cost-0.008857988119125366, done:False
17:56:18,726 root INFO state: [ 0.22686666 -0.00133333 -0.99978065  0.02094242  0.        ], cost-0.008855321407318116, done:False
17:56:18,776 root INFO state: [ 0.22526667 -0.032      -0.99978065  0.02094242  0.        ], cost-0.008791321516036987, done:False
17:56:18,826 root INFO state: [ 0.22493333 -0.00666667 -0.99978065  0.02094242  0.        ], cost-0.008777987957000733, done:False
17:56:18,876 root INFO state: [ 0.22513333  0.004      -0.99978065  0.02094242  0.        ], cost-0.008785988092422486, done:False
17:56:18,926 root INFO state: [ 0.22353333 -0.032      -0.99978065  0.02094242  0.        ], cost-0.008721988201141357, done:False
17:56:18,977 root INFO state: [ 0.22333333 -0.004      -0.99978065  0.02094242  0.        ], cost-0.008713988065719604, done:False
17:56:19,28 root INFO state: [ 0.22326666 -0.00133333 -0.99950653  0.03141076 -0.20943952], cost-0.008437199592590332, done:False
17:56:19,78 root INFO state: [ 0.2218     -0.02933333 -0.99950653  0.03141076  0.        ], cost-0.008378533124923706, done:False
17:56:19,128 root INFO state: [ 0.22146666 -0.00666667 -0.99950653  0.03141076  0.        ], cost-0.008365199565887452, done:False
17:56:19,179 root INFO state: [ 0.22133334 -0.00266667 -0.99950653  0.03141076  0.        ], cost-0.008359866738319397, done:False
17:56:19,229 root INFO state: [ 0.2198     -0.03066667 -0.99950653  0.03141076  0.        ], cost-0.008298532962799072, done:False
17:56:19,279 root INFO state: [ 0.21933334 -0.00933333 -0.99950653  0.03141076  0.        ], cost-0.008279866576194762, done:False
17:56:19,329 root INFO state: [ 0.2194      0.00133333 -0.99950653  0.03141076  0.        ], cost-0.008282533288002015, done:False
17:56:19,380 root INFO state: [ 0.21806666 -0.02666667 -0.99950653  0.03141076  0.        ], cost-0.008229199647903442, done:False
17:56:19,430 root INFO state: [ 0.2176     -0.00933333 -0.99950653  0.03141076  0.        ], cost-0.008210533261299134, done:False
17:56:19,481 root INFO state: [ 0.21753334 -0.00133333 -0.99950653  0.03141076  0.        ], cost-0.008207866549491882, done:False
17:56:19,530 root INFO state: [ 0.2164     -0.02266667 -0.99950653  0.03141076  0.        ], cost-0.008162533044815063, done:False
17:56:19,580 root INFO state: [ 0.21546666 -0.01866667 -0.99950653  0.03141076  0.        ], cost-0.008125199675559998, done:False
17:56:19,631 root INFO state: [ 0.21533333 -0.00266667 -0.99950653  0.03141076  0.        ], cost-0.008119866251945496, done:False
17:56:19,681 root INFO state: [ 0.21546666  0.00266667 -0.99950653  0.03141076  0.        ], cost-0.008125199675559998, done:False
17:56:19,731 root INFO state: [ 0.21466666 -0.016      -0.99950653  0.03141076  0.        ], cost-0.008093199729919433, done:False
17:56:19,782 root INFO state: [ 0.2146     -0.00133333 -0.99950653  0.03141076  0.        ], cost-0.008090533018112182, done:False
17:56:19,832 root INFO state: [ 0.2148      0.004      -0.99950653  0.03141076  0.        ], cost-0.008098533153533935, done:False
17:56:19,881 root INFO state: [ 0.21406667 -0.01466667 -0.99950653  0.03141076  0.        ], cost-0.008069199919700622, done:False
17:56:19,932 root INFO state: [ 0.21406667  0.         -0.99950653  0.03141076  0.        ], cost-0.008069199919700622, done:False
17:56:19,983 root INFO state: [ 0.21506667  0.02       -0.99912286  0.04187565 -0.20943952], cost-0.007725524902343749, done:False
17:56:20,33 root INFO state: [ 0.21586667  0.016      -0.99912286  0.04187565  0.        ], cost-0.007757524847984315, done:False
17:56:20,83 root INFO state: [ 0.2158     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007754858136177063, done:False
17:56:20,132 root INFO state: [ 0.21473333 -0.02133333 -0.99912286  0.04187565  0.        ], cost-0.0077121913433074955, done:False
17:56:20,184 root INFO state: [ 0.21453333 -0.004      -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:20,234 root INFO state: [ 0.2148      0.00533333 -0.99912286  0.04187565  0.        ], cost-0.007714858055114746, done:False
17:56:20,284 root INFO state: [ 0.21406667 -0.01466667 -0.99912286  0.04187565  0.        ], cost-0.007685524821281433, done:False
17:56:20,335 root INFO state: [ 0.21393333 -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.007680191397666932, done:False
17:56:20,385 root INFO state: [ 0.21486667  0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007717524766921996, done:False
17:56:20,435 root INFO state: [ 0.21486667  0.         -0.99912286  0.04187565  0.        ], cost-0.007717524766921996, done:False
17:56:20,485 root INFO state: [ 0.2138     -0.02133333 -0.99950653  0.03141076  0.20943952], cost-0.008058533072471619, done:False
17:56:20,535 root INFO state: [ 0.21306667 -0.01466667 -0.99950653  0.03141076  0.        ], cost-0.008029199838638305, done:False
17:56:20,585 root INFO state: [ 0.21306667  0.         -0.99950653  0.03141076  0.        ], cost-0.008029199838638305, done:False
17:56:20,635 root INFO state: [ 0.21426667  0.024      -0.99950653  0.03141076  0.        ], cost-0.008077200055122375, done:False
17:56:20,686 root INFO state: [ 0.2144      0.00266667 -0.99950653  0.03141076  0.        ], cost-0.00808253288269043, done:False
17:56:20,736 root INFO state: [ 0.21346667 -0.01866667 -0.99950653  0.03141076  0.        ], cost-0.008045200109481811, done:False
17:56:20,786 root INFO state: [ 0.2136      0.00266667 -0.99950653  0.03141076  0.        ], cost-0.008050532937049866, done:False
17:56:20,836 root INFO state: [ 0.21466666  0.02133333 -0.99950653  0.03141076  0.        ], cost-0.008093199729919433, done:False
17:56:20,887 root INFO state: [ 0.21473333  0.00133333 -0.99950653  0.03141076  0.        ], cost-0.008095866441726685, done:False
17:56:20,937 root INFO state: [ 0.21386667 -0.01733333 -0.99950653  0.03141076  0.        ], cost-0.008061199784278869, done:False
17:56:20,988 root INFO state: [ 0.2138     -0.00133333 -0.99950653  0.03141076  0.        ], cost-0.008058533072471619, done:False
17:56:21,38 root INFO state: [ 0.21486667  0.02133333 -0.99950653  0.03141076  0.        ], cost-0.008101199865341186, done:False
17:56:21,88 root INFO state: [ 0.21493334  0.00133333 -0.99912286  0.04187565 -0.20943952], cost-0.0077201914787292485, done:False
17:56:21,138 root INFO state: [ 0.21466666 -0.00533333 -0.99912286  0.04187565  0.        ], cost-0.007709524631500243, done:False
17:56:21,189 root INFO state: [ 0.215       0.00666667 -0.99912286  0.04187565  0.        ], cost-0.007722858190536499, done:False
17:56:21,239 root INFO state: [ 0.2142     -0.016      -0.99912286  0.04187565  0.        ], cost-0.007690858244895935, done:False
17:56:21,290 root INFO state: [ 0.21406667 -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.007685524821281433, done:False
17:56:21,340 root INFO state: [ 0.21433334  0.00533333 -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:21,390 root INFO state: [ 0.2136     -0.01466667 -0.99912286  0.04187565  0.        ], cost-0.007666857838630676, done:False
17:56:21,440 root INFO state: [ 0.21353333 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007664191126823426, done:False
17:56:21,491 root INFO state: [ 0.21446666  0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:21,541 root INFO state: [ 0.21446666  0.         -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:21,591 root INFO state: [ 0.21353333 -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007664191126823426, done:False
17:56:21,640 root INFO state: [ 0.2134     -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:21,691 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:21,741 root INFO state: [ 0.21453333  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:21,791 root INFO state: [ 0.21346667 -0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:21,843 root INFO state: [ 0.21346667  0.         -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:21,892 root INFO state: [ 0.21446666  0.02       -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:21,943 root INFO state: [ 0.21446666  0.         -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:21,993 root INFO state: [ 0.21346667 -0.02       -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:22,43 root INFO state: [ 0.21346667  0.         -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:22,93 root INFO state: [ 0.21446666  0.02       -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:22,143 root INFO state: [ 0.21453333  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:22,194 root INFO state: [ 0.21353333 -0.02       -0.99912286  0.04187565  0.        ], cost-0.007664191126823426, done:False
17:56:22,244 root INFO state: [ 0.21346667 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:22,294 root INFO state: [ 0.21453333  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:22,345 root INFO state: [ 0.21446666 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:22,395 root INFO state: [ 0.21346667 -0.02       -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:22,445 root INFO state: [ 0.2134     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:22,495 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:22,546 root INFO state: [ 0.21433334 -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:22,596 root INFO state: [ 0.2134     -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:22,646 root INFO state: [ 0.2134      0.         -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:22,696 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:22,746 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:22,796 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:22,846 root INFO state: [ 0.21346667  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:22,897 root INFO state: [ 0.21446666  0.02       -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:22,948 root INFO state: [ 0.21433334 -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:22,998 root INFO state: [ 0.2134     -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:23,48 root INFO state: [ 0.21346667  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:23,99 root INFO state: [ 0.21446666  0.02       -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:23,148 root INFO state: [ 0.21446666  0.         -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:23,199 root INFO state: [ 0.21353333 -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007664191126823426, done:False
17:56:23,248 root INFO state: [ 0.2134     -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:23,300 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:23,350 root INFO state: [ 0.21453333  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:23,400 root INFO state: [ 0.21346667 -0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:23,450 root INFO state: [ 0.2134     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:23,500 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:23,551 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:23,601 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:23,651 root INFO state: [ 0.21333334 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:23,702 root INFO state: [ 0.2144      0.02133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:23,752 root INFO state: [ 0.21426667 -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.007693524956703186, done:False
17:56:23,802 root INFO state: [ 0.21333334 -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:23,852 root INFO state: [ 0.21333334  0.         -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:23,903 root INFO state: [ 0.2144      0.02133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:23,953 root INFO state: [ 0.21433334 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:24,3 root INFO state: [ 0.21333334 -0.02       -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:24,53 root INFO state: [ 0.21333334  0.         -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:24,103 root INFO state: [ 0.21433334  0.02       -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:24,153 root INFO state: [ 0.2144      0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:24,204 root INFO state: [ 0.21346667 -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:24,254 root INFO state: [ 0.2134     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:24,304 root INFO state: [ 0.2144      0.02       -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:24,355 root INFO state: [ 0.2144      0.         -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:24,405 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:24,455 root INFO state: [ 0.2134      0.         -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:24,506 root INFO state: [ 0.2144      0.02       -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:24,556 root INFO state: [ 0.21453333  0.00266667 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:24,606 root INFO state: [ 0.21346667 -0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:24,656 root INFO state: [ 0.2134     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:24,706 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:24,757 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:24,807 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:24,856 root INFO state: [ 0.21346667  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:24,907 root INFO state: [ 0.21446666  0.02       -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:24,958 root INFO state: [ 0.21433334 -0.00266667 -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:25,8 root INFO state: [ 0.2134     -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:25,58 root INFO state: [ 0.21346667  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:25,108 root INFO state: [ 0.21453333  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:25,158 root INFO state: [ 0.21446666 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:25,209 root INFO state: [ 0.21346667 -0.02       -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:25,259 root INFO state: [ 0.2134     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:25,310 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:25,360 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:25,410 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:25,460 root INFO state: [ 0.21346667  0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:25,511 root INFO state: [ 0.21453333  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.0077041912078857425, done:False
17:56:25,561 root INFO state: [ 0.21446666 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:25,611 root INFO state: [ 0.21346667 -0.02       -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:25,661 root INFO state: [ 0.2134     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:25,712 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:25,762 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:25,812 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:25,862 root INFO state: [ 0.21333334 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:25,913 root INFO state: [ 0.21433334  0.02       -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:25,963 root INFO state: [ 0.21433334  0.         -0.99912286  0.04187565  0.        ], cost-0.007696191668510438, done:False
17:56:26,13 root INFO state: [ 0.2134     -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,63 root INFO state: [ 0.2134      0.         -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,113 root INFO state: [ 0.2144      0.02       -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:26,163 root INFO state: [ 0.2144      0.         -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:26,214 root INFO state: [ 0.21346667 -0.01866667 -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:26,264 root INFO state: [ 0.21346667  0.         -0.99912286  0.04187565  0.        ], cost-0.007661525011062622, done:False
17:56:26,314 root INFO state: [ 0.21446666  0.02       -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:26,365 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:26,415 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,465 root INFO state: [ 0.2134      0.         -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,516 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:26,566 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:26,616 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,666 root INFO state: [ 0.2134      0.         -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,717 root INFO state: [ 0.21446666  0.02133333 -0.99912286  0.04187565  0.        ], cost-0.007701524496078492, done:False
17:56:26,767 root INFO state: [ 0.2144     -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:26,817 root INFO state: [ 0.2134     -0.02       -0.99912286  0.04187565  0.        ], cost-0.0076588582992553715, done:False
17:56:26,867 root INFO state: [ 0.21333334 -0.00133333 -0.99912286  0.04187565  0.        ], cost-0.007656191587448119, done:False
17:56:26,918 root INFO state: [ 0.2144      0.02133333 -0.99912286  0.04187565  0.        ], cost-0.00769885778427124, done:False
17:56:26,968 root INFO state: [ 0.2144      0.         -0.99950653  0.03141076  0.20943952], cost-0.00808253288269043, done:False
17:56:27,18 root INFO state: [ 0.2132     -0.024      -0.99950653 -0.03141076  1.2566371 ], cost-0.008034533262252808, done:False
17:56:27,68 root INFO state: [ 0.2138      0.012      -0.9945219  -0.10452846  1.4660766 ], cost-0.0030739158391952515, done:False
17:56:27,118 root INFO state: [ 0.21753334  0.07466666 -0.985996   -0.16676874  1.2566371 ], cost0.005302658677101136, done:False
17:56:27,169 root INFO state: [ 0.22266667  0.10266667 -0.9781476  -0.20791169  0.83775806], cost0.012945707440376281, done:False
17:56:27,219 root INFO state: [ 0.2284      0.11466666 -0.9711343  -0.23853345  0.62831855], cost0.019729694724082945, done:False
17:56:27,269 root INFO state: [ 0.2356      0.144      -0.96858317 -0.24868989  0.20943952], cost0.021992833614349366, done:False
17:56:27,319 root INFO state: [ 0.2472      0.232      -0.96858317 -0.24868989  0.        ], cost0.021528833508491517, done:False
17:56:27,370 root INFO state: [ 0.2636      0.328      -0.9781476  -0.20791169 -0.83775806], cost0.011308374404907227, done:False
17:56:27,420 root INFO state: [ 0.2818      0.364      -0.98768836 -0.15643446 -1.0471976 ], cost0.001039637327194214, done:False
17:56:27,470 root INFO state: [ 0.29953334  0.35466668 -0.99556196 -0.09410831 -1.2566371 ], cost-0.007543290853500367, done:False
17:56:27,521 root INFO state: [ 0.3064      0.13733333 -0.9986295  -0.05233596 -0.83775806], cost-0.010885510444641113, done:False
17:56:27,571 root INFO state: [ 0.2978     -0.172      -0.99950653 -0.03141076 -0.41887903], cost-0.011418533325195313, done:False
17:56:27,621 root INFO state: [ 0.28546667 -0.24666667 -0.99978065 -0.02094242 -0.20943952], cost-0.011199321746826172, done:False
17:56:27,672 root INFO state: [ 0.28586668  0.008      -0.99978065  0.02094242 -0.83775806], cost-0.011215322017669678, done:False
17:56:27,722 root INFO state: [ 0.28726667  0.028      -0.99731445  0.07323819 -1.0471976 ], cost-0.00880511999130249, done:False
17:56:27,772 root INFO state: [ 0.27653334 -0.21466666 -0.99649286  0.08367784 -0.20943952], cost-0.007554196119308472, done:False
17:56:27,823 root INFO state: [ 0.2724     -0.08266667 -0.9945219   0.10452846 -0.41887903], cost-0.005417915582656861, done:False
17:56:27,872 root INFO state: [ 0.27466667  0.04533333 -0.98927236  0.14608303 -0.83775806], cost-0.0002590227127075191, done:False
17:56:30,486 root INFO reset with nsteps: 300, state:[-6.6666667e-05  0.0000000e+00 -9.9556196e-01  9.4108313e-02
  0.0000000e+00]
17:56:30,527 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
17:56:30,527 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
17:56:30,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
17:56:30,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
17:56:30,534 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
17:56:30,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
17:56:30,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal 700 condensed>) = 10.535
17:56:30,536 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/sardor/anaconda3/envs/torch/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
17:56:30,543 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
17:56:30,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
17:56:30,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 700 normal>) = 10.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
17:56:30,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
17:56:30,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
17:56:30,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 700 normal>) = 11.335
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
17:56:30,550 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
17:56:30,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
17:56:30,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal 700 condensed>) = 10.535
17:56:30,552 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/sardor/anaconda3/envs/torch/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
